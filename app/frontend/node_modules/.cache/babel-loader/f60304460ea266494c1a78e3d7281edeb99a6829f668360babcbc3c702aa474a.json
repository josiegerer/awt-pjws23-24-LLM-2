{"ast":null,"code":"import { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\",\n  class: \"chatwindow\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"language-style-div\"\n}, [/*#__PURE__*/_createElementVNode(\"h6\", null, \" Language Style\"), /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"language-style-btn\",\n  \"lang-style\": \"Informal\"\n}, \"Informal\")]), /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"language-style-btn\",\n  \"lang-style\": \"Formal\"\n}, \"Formal\")]), /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"language-style-btn\",\n  \"lang-style\": \"Academic\"\n}, \"Academic\")])], -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"language-difficulty-div\"\n}, [/*#__PURE__*/_createElementVNode(\"h6\", null, \" Difficulty Level\"), /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"language-diff-btn\",\n  \"lang-diff\": \"Beginner\"\n}, \"Beginner\")]), /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"language-diff-btn\",\n  \"lang-diff\": \"Intermediate\"\n}, \"Intermediate\")]), /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"language-diff-btn\",\n  \"lang-diff\": \"Advanced\"\n}, \"Advanced\")])], -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"chat-container\\\"><div class=\\\"chat-header\\\">choose the language you want to learn</div><div class=\\\"chat-messages\\\" id=\\\"chat-messages\\\"></div><div class=\\\"input-container\\\"><input type=\\\"text\\\" class=\\\"chat-input\\\" id=\\\"user-input\\\" placeholder=\\\"Send a message...\\\"><button id=\\\"send-button\\\">Send</button></div></div>\", 1);\nconst _hoisted_5 = {\n  class: \"language-bubbles\"\n};\nconst _hoisted_6 = {\n  class: \"language-bubble\",\n  \"data-language\": \"English\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"language-bubble\",\n  \"data-language\": \"Spanish\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"language-bubble\",\n  \"data-language\": \"French\"\n};\nconst _hoisted_11 = [\"src\"];\nconst _hoisted_12 = {\n  class: \"language-bubble\",\n  \"data-language\": \"German\"\n};\nconst _hoisted_13 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _hoisted_3, _hoisted_4, _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"img\", {\n    class: \"language-icon\",\n    src: require('@/assets/flag_en.jpg'),\n    alt: \"English Flag\"\n  }, null, 8 /* PROPS */, _hoisted_7)]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"img\", {\n    class: \"language-icon\",\n    src: require('@/assets/flag_es.png'),\n    alt: \"Spanish Flag\"\n  }, null, 8 /* PROPS */, _hoisted_9)]), _createElementVNode(\"div\", _hoisted_10, [_createElementVNode(\"img\", {\n    class: \"language-icon\",\n    src: require('@/assets/flag_fr.png'),\n    alt: \"French Flag\"\n  }, null, 8 /* PROPS */, _hoisted_11)]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"img\", {\n    class: \"language-icon\",\n    src: require('@/assets/flag_de.png'),\n    alt: \"German Flag\"\n  }, null, 8 /* PROPS */, _hoisted_13)])])]);\n}","map":{"version":3,"names":["id","class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","src","require","alt","_hoisted_8","_hoisted_10","_hoisted_12"],"sources":["/Users/josi/Documents/GitHub/awt-pjws23-24-LLM-2/app/frontend/src/components/ChatWindow.vue"],"sourcesContent":["<template>\n    <div id=\"app\" class=\"chatwindow\">\n        <div class=\"language-style-div\">\n            <h6> Language Style</h6>\n            <div>\n                <button class=\"language-style-btn\" lang-style=\"Informal\">Informal</button>  \n            </div>\n            <div>\n                <button class=\"language-style-btn\" lang-style=\"Formal\">Formal</button> \n            </div>\n            <div>\n                <button class=\"language-style-btn\" lang-style=\"Academic\">Academic</button>\n            </div>\n        </div>\n\n        <div class=\"language-difficulty-div\">\n            <h6> Difficulty Level</h6>\n            <div>\n                <button class=\"language-diff-btn\" lang-diff=\"Beginner\">Beginner</button>  \n            </div>\n            <div>\n                <button class=\"language-diff-btn\" lang-diff=\"Intermediate\">Intermediate</button> \n            </div>\n            <div>\n                <button class=\"language-diff-btn\" lang-diff=\"Advanced\">Advanced</button>\n            </div>\n        </div>\n\n        <div class=\"chat-container\">\n            <div class=\"chat-header\">choose the language you want to learn</div>\n            <div class=\"chat-messages\" id=\"chat-messages\"></div>\n            <div class=\"input-container\">\n                <input type=\"text\" class=\"chat-input\" id=\"user-input\" placeholder=\"Send a message...\">\n                <button id=\"send-button\">Send</button>\n            </div>\n        </div>\n\n        <div class=\"language-bubbles\">\n            <div class=\"language-bubble\" data-language=\"English\">\n                <img class=\"language-icon\" :src=\"require('@/assets/flag_en.jpg')\" alt=\"English Flag\">\n            </div>\n            <div class=\"language-bubble\" data-language=\"Spanish\">\n                <img class=\"language-icon\" :src=\"require('@/assets/flag_es.png')\" alt=\"Spanish Flag\">\n            </div>\n            <div class=\"language-bubble\" data-language=\"French\">\n                <img class=\"language-icon\" :src=\"require('@/assets/flag_fr.png')\" alt=\"French Flag\">\n            </div>\n            <div class=\"language-bubble\" data-language=\"German\">\n                <img class=\"language-icon\" :src=\"require('@/assets/flag_de.png')\" alt=\"German Flag\">\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    mounted() {\n        const chatMessages = document.getElementById('chat-messages');\n        const userInput = document.getElementById('user-input');\n        const sendButton = document.getElementById('send-button');\n\n        function appendUserMessage(message) {\n            const userMessageDiv = document.createElement('div');\n            userMessageDiv.className = 'user-message';\n            userMessageDiv.textContent = message;\n            chatMessages.appendChild(userMessageDiv);\n        }\n\n        function appendBotMessage(message) {\n            const botMessageDiv = document.createElement('div');\n            botMessageDiv.className = 'bot-message';\n            botMessageDiv.textContent = message;\n            chatMessages.appendChild(botMessageDiv);\n        }\n\n        function sendMessage() {\n            const userMessage = userInput.value;\n            if (userMessage.trim() !== '') {\n                if (userMessage.trim().toLowerCase() == 'clear') {\n                    clearChat();\n                } else {\n                    setTimeout(() => {\n                        appendUserMessage(userMessage);\n                    }, 300);\n                    setTimeout(() => {\n                        simulateBotTyping();\n                    }, 1300);\n                }\n            }\n            userInput.value = '';\n        }\n\n        function simulateBotTyping(selectedLanguage, selectedLanguageStyle) {\n            // Add \"typing\" indicator message to chat messages\n            const typingIndicator = 'typing...';\n            const typingIndicatorDiv = document.createElement('div');\n            const chatHeader = document.querySelector('.chat-header');\n            const typingDuration = 1500;\n            let botResponse = \"\";\n\n            typingIndicatorDiv.className = 'bot-message typing-indicator';\n            typingIndicatorDiv.textContent = typingIndicator;\n            chatMessages.appendChild(typingIndicatorDiv);\n\n            // Add typing class to trigger animation\n            chatMessages.classList.add('typing');\n\n            setTimeout(() => {\n                // Remove typing class and typing indicator message to stop animation\n                chatMessages.classList.remove('typing');\n                typingIndicatorDiv.remove();\n\n                if (chatHeader.textContent.trim() === 'choose the language you want to learn') {\n                    botResponse = 'Please select a language and style you want to learn';\n                } else {\n                    botResponse = 'Hello, I am langchatAI and I will help you learn ' + selectedLanguageStyle + ' ' + selectedLanguage + '!';\n                }\n\n                appendBotMessage(botResponse);\n\n                // Scroll chat messages container to the bottom to show the new message\n                chatMessages.scrollTop = chatMessages.scrollHeight;\n            }, typingDuration);\n        }\n\n        // Clear all chat messages\n        function clearChat() {\n            chatMessages.innerHTML = '';\n        }\n\n        // Event listeners for sending messages\n        sendButton.addEventListener('click', sendMessage);\n\n        userInput.addEventListener('keydown', function(event) {\n            if (event.key === 'Enter') {\n                sendMessage();\n            }\n        });\n\n        //Get Input from Buttons (Language, Style and Difficulty) to use in Chat Window\n        document.addEventListener(\"DOMContentLoaded\", function() {\n            const languageBubbles = document.querySelectorAll('.language-bubble');\n            const languageStyleButtons = document.querySelectorAll('.language-style-btn');\n            const languageDiffButtons = document.querySelectorAll('.language-diff-btn');\n            const chatHeader = document.querySelector('.chat-header');\n\n            let selectedLanguage = '';\n            let selectedLanguageStyle = '';\n            let selectedLanguageDiff = '';\n\n            languageBubbles.forEach(bubble => {\n                bubble.addEventListener('click', function() {\n                    // Get the selected language from the clicked bubble\n                    selectedLanguage = bubble.dataset.language;\n\n                    // Remove 'selected' class from all language bubbles and style/diff buttons & Add 'selected' class to the clicked bubble\n                    languageBubbles.forEach(b => b.classList.remove('selected'));\n                    languageStyleButtons.forEach(btn => btn.classList.remove('selected'));\n                    languageDiffButtons.forEach(btn => btn.classList.remove('selected'));\n                    bubble.classList.add('selected');\n\n                    // Update chat header with selected language\n                    chatHeader.textContent = 'Please select a language style and difficulty level for the ' + selectedLanguage + ' Bot';\n\n                    clearChat();\n                });\n            });\n\n            languageDiffButtons.forEach(button => {\n                button.addEventListener('click', function() {\n                    languageDiffButtons.forEach(btn => btn.classList.remove('selected'));\n                    selectedLanguageDiff = button.getAttribute('lang-diff');\n                    button.classList.add('selected');\n\n                    updateChatHeader();\n                });\n            });\n\n            languageStyleButtons.forEach(button => {\n                button.addEventListener('click', function() {\n                    languageStyleButtons.forEach(btn => btn.classList.remove('selected'));\n                    selectedLanguageStyle = button.getAttribute('lang-style');\n                    button.classList.add('selected');\n\n                    updateChatHeader();\n                });\n            });\n\n            function updateChatHeader() {\n                if (selectedLanguageStyle && selectedLanguageDiff) {\n                    chatHeader.textContent = selectedLanguageDiff + ' ' + selectedLanguageStyle + ' ' + selectedLanguage + ' Bot';\n                    simulateBotTyping(selectedLanguage, selectedLanguageStyle);\n                }\n            }\n\n        });\n    }\n}\n</script>\n\n<style>\n@import url('https://fonts.googleapis.com/css?family=IBM Plex Mono');\n\ndiv.chatwindow {\n    text-align: center;\n    margin-top: 3rem;\n}\n\n/* CHAT */\n\n/*Language Bubbles*/\n.language-bubbles {\nposition: fixed;\ntop: 50%;\nright: 50px;\ndisplay: flex;\nflex-direction: column;\nalign-items: flex-end;\ntransform: translateY(-50%);\n}\n\n.language-bubble {\nwidth: 60px;\nheight: 60px;\nborder-radius: 75%;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 20px;\ncursor: pointer;\ntransition: background-color 0.3s ease;\nborder: 1px solid #a9a9a9;\nbox-shadow: 0 4px 8px #4646461a;\n}\n\n.language-icon {\nwidth: 50px; /* Adjust the icon size */\nheight: 50px; /* Adjust the icon size */\nborder-radius: 50%; /* Ensures the icon is round */\nobject-fit: cover; /* Maintain aspect ratio */\nborder-style: hidden;\n}\n\n.language-bubble:hover {\nbackground-color: #b8b6b6a6;\n}\n\n.language-bubble.selected {\nbackground-color: #b8b6b6a6; \n}\n\n\n/*Language Style*/\n.language-style-div {\n  position: fixed;\n  top: 35%;\n  left: 30px; \n  transform: translateY(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  z-index: 999; \n}\n\n.language-style-btn{\n  width: 120px;\n  height: 40px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  background-color: #003EC6;\n  color: #fff;\n  border: none;\n  box-shadow: 2px 2px 2px #0a3899;\n  font-size: 14px;\n}\nbutton{\n    font-family: 'IBM Plex Mono', monospace;\n}\n\n.language-style-btn:hover,#send-button:hover {\n  background-color: #3272fc;\n}\n\n.language-style-btn.selected {\n  background-color: #3272fc;\n}\n\n/*Language Difficulty*/\n.language-difficulty-div {\n  position: fixed;\n  top: 70%;\n  left: 30px; \n  transform: translateY(-50%);\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  z-index: 999; \n}\n.language-diff-btn{\n  width: 120px;\n  height: 40px;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 20px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  background-color: #003EC6;\n  color: #fff;\n  border: none;\n  box-shadow: 2px 2px 2px #0a3899;\n  font-size: 14px;\n}\n\n#send-button{\n  width: 80px;\n  height: 30px;\n  margin-left: 10px; \n  margin-right: 10px;\n  cursor: pointer;\n  border-radius: 10px;\n  transition: background-color 0.3s ease;\n  background-color: #003EC6;\n  color: #fff;\n  border: none;\n  box-shadow: 2px 2px 2px #0a3899;\n  font-size: 14px;\n}\n\n.language-diff-btn:hover,#send-button:hover {\n  background-color: #3272fc;\n}\n\n.language-diff-btn.selected {\n  background-color: #3272fc;\n}\n\nh4 {\n  font-size: 15px;\n  margin-bottom: 15px;\n}\n\n\n/* CHAT WINDOW */\n.chat-container {\n  width: 60%;\n  height: 70vh; /* 70% of the viewport height */\n  margin: 20px auto;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  overflow: hidden;\n  background-color: #fff;\n  box-shadow: 0 20px 20px 20px #a7a7a73a;\n}\n\n.chat-messages {\n  padding: 20px;\n  overflow-y: auto;\n  height: calc(100% - 150px);\n  word-wrap: break-word;\n  font-size: 14px;\n}\n\n.chat-header {\n  background-color: #003EC6;\n  color: #fff;\n  padding: 15px;\n  text-align: center;\n  font-size: 15px;\n}\n\n.user-message, .bot-message {\n  margin-bottom: 10px;\n  display: block; \n  white-space: pre-wrap;\n  clear: both;\n}\n\n.user-message {\n  text-align: right;\n  color: #003EC6;\n  border-radius: 15px;\n  padding: 10px;\n  padding-right: 20px;\n  background-color: #fff;\n  box-shadow: 0 4px 8px #4646461a;\n  border: 2px #003EC6 solid;\n}\n\n.bot-message {\n  text-align: left;\n  color: #0D1117;\n  border: 1px solid #444;\n  border-radius: 15px;\n  padding: 10px;\n  padding-left: 20px;\n  box-shadow: 0 4px 8px #4646461a;\n}\n\n.bot-message.typing-indicator {\n  background-color: transparent;\n  border: none;\n  box-shadow: none;\n}\n\n.chat-input {\n  width: 100%;\n  padding: 10px;\n  border: none;\n  font-size: 14px;\n  resize: vertical;\n  font-family: monospace;\n}\n.input-container {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid #ccc;\n  padding: 10px;\n  margin-top: auto;\n}\n\n</style>"],"mappings":";;EACSA,EAAE,EAAC,KAAK;EAACC,KAAK,EAAC;;gCAChBC,mBAAA,CAWM;EAXDD,KAAK,EAAC;AAAoB,I,aAC3BC,mBAAA,CAAwB,YAApB,iBAAe,G,aACnBA,mBAAA,CAEM,c,aADFA,mBAAA,CAA0E;EAAlED,KAAK,EAAC,oBAAoB;EAAC,YAAU,EAAC;GAAW,UAAQ,E,gBAErEC,mBAAA,CAEM,c,aADFA,mBAAA,CAAsE;EAA9DD,KAAK,EAAC,oBAAoB;EAAC,YAAU,EAAC;GAAS,QAAM,E,gBAEjEC,mBAAA,CAEM,c,aADFA,mBAAA,CAA0E;EAAlED,KAAK,EAAC,oBAAoB;EAAC,YAAU,EAAC;GAAW,UAAQ,E;gCAIzEC,mBAAA,CAWM;EAXDD,KAAK,EAAC;AAAyB,I,aAChCC,mBAAA,CAA0B,YAAtB,mBAAiB,G,aACrBA,mBAAA,CAEM,c,aADFA,mBAAA,CAAwE;EAAhED,KAAK,EAAC,mBAAmB;EAAC,WAAS,EAAC;GAAW,UAAQ,E,gBAEnEC,mBAAA,CAEM,c,aADFA,mBAAA,CAAgF;EAAxED,KAAK,EAAC,mBAAmB;EAAC,WAAS,EAAC;GAAe,cAAY,E,gBAE3EC,mBAAA,CAEM,c,aADFA,mBAAA,CAAwE;EAAhED,KAAK,EAAC,mBAAmB;EAAC,WAAS,EAAC;GAAW,UAAQ,E;;;EAalEA,KAAK,EAAC;AAAkB;;EACpBA,KAAK,EAAC,iBAAiB;EAAC,eAAa,EAAC;;;;EAGtCA,KAAK,EAAC,iBAAiB;EAAC,eAAa,EAAC;;;;EAGtCA,KAAK,EAAC,iBAAiB;EAAC,eAAa,EAAC;;;;EAGtCA,KAAK,EAAC,iBAAiB;EAAC,eAAa,EAAC;;;;uBA9CnDE,mBAAA,CAkDM,OAlDNC,UAkDM,GAjDFC,UAWM,EAENC,UAWM,EAENC,UAOM,EAENL,mBAAA,CAaM,OAbNM,UAaM,GAZFN,mBAAA,CAEM,OAFNO,UAEM,GADFP,mBAAA,CAAqF;IAAhFD,KAAK,EAAC,eAAe;IAAES,GAAG,EAAEC,OAAO;IAA0BC,GAAG,EAAC;yCAE1EV,mBAAA,CAEM,OAFNW,UAEM,GADFX,mBAAA,CAAqF;IAAhFD,KAAK,EAAC,eAAe;IAAES,GAAG,EAAEC,OAAO;IAA0BC,GAAG,EAAC;yCAE1EV,mBAAA,CAEM,OAFNY,WAEM,GADFZ,mBAAA,CAAoF;IAA/ED,KAAK,EAAC,eAAe;IAAES,GAAG,EAAEC,OAAO;IAA0BC,GAAG,EAAC;0CAE1EV,mBAAA,CAEM,OAFNa,WAEM,GADFb,mBAAA,CAAoF;IAA/ED,KAAK,EAAC,eAAe;IAAES,GAAG,EAAEC,OAAO;IAA0BC,GAAG,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}